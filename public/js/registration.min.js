const registrationForm = {
    form: "", email: "", password: "", confirmPassword: "", targetsAnimation: "", classAnimation: "", constructor(form, email, password, confirmPassword, targetsAnimations, classAnimation) {
        this.form = form; this.email = email; this.password = password; this.confirmPassword = confirmPassword; this.targetsAnimation = targetsAnimations; this.classAnimation = classAnimation; const threshold = .3
        const options = { root: null, rootMargin: "0px", threshold }
        const handleIntersect = function (entries, observer) { entries.forEach(function (entry) { if (entry.intersectionRatio > threshold) { entry.target.classList.add(registrationForm.classAnimation); observer.unobserve(entry.target) } }) }
        window.addEventListener("DOMContentLoaded", function () { const observer = new IntersectionObserver(handleIntersect, options); const targets = document.querySelectorAll(registrationForm.targetsAnimation); targets.forEach(function (target) { observer.observe(target) }) })
        this.form.on("submit", registrationForm.checkForm); $("#" + this.email).on("blur", registrationForm.checkEmail); $("#" + this.password).on("blur", registrationForm.checkPassword); $("#" + this.confirmPassword).on("blur", registrationForm.checkConfirmPassword)
    }, checkEmail() { registrationForm.deleteErrorMessage(registrationForm.email); var regexMail = /^[a-zA-Z0-9._-]+@[a-z0-9._-]{2,}\.[a-z]{2,4}$/; let email = document.getElementById(registrationForm.email); if (!regexMail.test($.trim(email.value))) { registrationForm.showErrorMessage(registrationForm.email, "Adresse email invalide"); return !1 } }, checkPassword() {
        registrationForm.deleteErrorMessage(registrationForm.password); let password = document.getElementById(registrationForm.password); if (password.value.indexOf(" ") > 0) { registrationForm.showErrorMessage(registrationForm.password, "Le mot de passe ne peut pas contenir d'espace"); return !1 }
        if (password.value.length < 8) { registrationForm.showErrorMessage(registrationForm.password, "Le mot de passe doit avoir 8 caractÃ¨res minimum"); return !1 }
    }, checkConfirmPassword() { registrationForm.deleteErrorMessage(registrationForm.confirmPassword); let password = document.getElementById(registrationForm.password); let confirmPassword = document.getElementById(registrationForm.confirmPassword); if (confirmPassword.value != password.value) { registrationForm.showErrorMessage(registrationForm.confirmPassword, "Confirmation incorrecte"); return !1 } }, checkForm(e) {
        if (registrationForm.checkEmail() == !1) { e.preventDefault() }
        if (registrationForm.checkPassword() == !1) { e.preventDefault() }
        if (registrationForm.checkConfirmPassword() == !1) { e.preventDefault() }
    }, showErrorMessage(inputName, message) { var $label = $("label[for=" + inputName + "]"); var $errorMessage = "<span class='invalid-feedback d-block'><span class='d-block'><span class='form-error-icon badge badge-danger text-uppercase'>Erreur</span><span class='form-error-message text-white'> " + message + "</span></span></span>"; $label.append($errorMessage); var $input = $("input[id=" + inputName + "]"); $input.addClass("is-invalid") }, deleteErrorMessage(inputName) { if ($("label[for=" + inputName + "] span.invalid-feedback").length > 0) { var $errorMessageSpan = $("label[for=" + inputName + "] span.invalid-feedback"); $errorMessageSpan.remove(); var $input = $("input[id=" + inputName + "]"); $input.removeClass("is-invalid") } },
}